{"version":3,"sources":["personservice.js","index.js"],"names":["baseUrl","newObject","axios","post","then","response","data","App","props","addPerson","event","preventDefault","state","persons","some","person","name","newName","alert","personObj","number","newNumber","personService","newPerson","setState","concat","addNote","totta","map","p","includes","noteObject","numero","handleNoteChange","console","log","target","value","handleNumberChange","get","submit","this","newNote","onChangeNote","onChangeNumber","React","Component","ViewDirectory","key","Form","onSubmit","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"qOAEMA,EAAU,gCAmBD,EAZA,SAACC,GAEZ,OADgBC,IAAMC,KAAKH,EAASC,GACrBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCHvCC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAiBRC,UAAY,SAACC,GAEX,GADAA,EAAMC,iBACF,EAAKC,MAAMC,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,OAAS,EAAKJ,MAAMK,WAehEC,MAAM,EAAKN,MAAMK,QAAS,aAf+C,CACtE,IAAME,EAAY,CACVH,KAAK,EAAKJ,MAAMK,QAChBG,OAAO,EAAKR,MAAMS,WAE1BC,EACYH,GACPf,MAAK,SAAAmB,GACL,EAAKC,SAAS,CACXX,QAAS,EAAKD,MAAMC,QAAQY,OAAOF,GACnCN,QAAS,GACTI,UAAW,UA/BN,EAsCnBK,QAAU,SAAChB,GACTA,EAAMC,iBACN,IAAIgB,EAAQ,EAAKf,MAAMC,QAAQe,KAAI,SAAAC,GAAC,OAAIA,EAAEb,QAAMc,SAAS,EAAKlB,MAAMK,SACpE,GAAIU,EACFT,MAAM,iBACNS,GAAQ,MAEL,CAEH,IAAMI,EAAa,CACjBf,KAAM,EAAKJ,MAAMK,QACjBe,OAAQ,EAAKpB,MAAMS,WAEfR,EAAU,EAAKD,MAAMC,QAAQY,OAAOM,GAE1C,EAAKP,SAAS,CACZX,QAASA,EACTI,QAAS,GACTI,UAAW,OAxDE,EA6DnBY,iBAAmB,SAACvB,GAClBwB,QAAQC,IAAIzB,EAAM0B,OAAOC,OACzB,EAAKb,SAAS,CAAEP,QAASP,EAAM0B,OAAOC,SA/DrB,EAiEnBC,mBAAqB,SAAC5B,GACpBwB,QAAQC,IAAIzB,EAAM0B,OAAOC,OACzB,EAAKb,SAAS,CAAEH,UAAWX,EAAM0B,OAAOC,SAjExC,EAAKzB,MAAQ,CACXC,QAAS,GACTI,QAAS,GACTI,UAAW,IAEba,QAAQC,IAAI,eAPK,E,iFASE,IAAD,OAClBD,QAAQC,IAAI,aACZjC,IACGqC,IAAI,+BACJnC,MAAK,SAAAC,GACJ6B,QAAQC,IAAI,qBACZ,EAAKX,SAAS,CAAEX,QAASR,EAASC,Y,+BA2DtC,OAHA4B,QAAQC,IAAI,UAIV,6BACA,+CACA,kBAAC,EAAD,CAAMK,OAAQC,KAAKhC,UAAWiB,QAAWe,KAAKf,QAASgB,QAAWD,KAAK7B,MAAM8B,QAC7EC,aAAcF,KAAKR,iBAAkBZ,UAAaoB,KAAK7B,MAAMS,UAC7DuB,eAAgBH,KAAKH,qBACrB,uCACD,4BACA,kBAAC,EAAD,CAAezB,QAAW4B,KAAK7B,MAAMC,gB,GAnFxBgC,IAAMC,WA0FlBC,EAAgB,SAACvC,GACrB,OACE,6BACGA,EAAMK,QAAQe,KAAI,SAAAC,GAAC,OAAI,wBAAImB,IAAKnB,EAAEb,MAAOa,EAAEb,KAApB,IAA2Ba,EAAEG,aAKrDiB,EAAO,SAACzC,GACZ,OACE,6BACE,0BAAM0C,SAAU1C,EAAMkB,SACpB,sCACQ,2BAAOW,MAAO7B,EAAMkC,QACxBS,SAAU3C,EAAMmC,eAFpB,WAIU,2BAAON,MAAO7B,EAAMa,UAC1B8B,SAAU3C,EAAMoC,kBAGpB,6BACE,4BAAQQ,KAAK,UAAb,mBAOK7C,YAEf8C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5e2a0de5.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\r\n    return request.then(response=>response.data)\r\n}\r\nconst remove = (id) =>{\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response=>response.data)\r\n} \r\nexport default {getAll, create, update, remove}","import React from 'react'\nimport axios from 'axios'\nimport ReactDOM from 'react-dom'\nimport personService from './personservice.js'\n/*const persons = [\n  \n]*/\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: ''\n    }\n    console.log('constructor')\n  }\n  componentDidMount() {\n    console.log('did mount')\n    axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        this.setState({ persons: response.data })\n      })\n  }\n  addPerson = (event) => {\n    event.preventDefault()\n    if(!this.state.persons.some(person => person.name === this.state.newName)){\n        const personObj = {\n                name:this.state.newName,\n                number:this.state.newNumber\n            }\n        personService\n            .create(personObj)\n            .then(newPerson =>{\n             this.setState({\n                persons: this.state.persons.concat(newPerson),\n                newName: '',\n                newNumber: ''\n              })\n            })\n } else {\n     alert(this.state.newName+ \"on jo\")\n }\n}\n  addNote = (event) => {\n    event.preventDefault()\n    var totta = this.state.persons.map(p => p.name).includes(this.state.newName)\n    if (totta) {\n      alert('duplikaatti !')\n      totta = false;\n    }\n    else {\n    \n      const noteObject = {\n        name: this.state.newName,\n        numero: this.state.newNumber\n      }\n      const persons = this.state.persons.concat(noteObject)\n\n      this.setState({\n        persons: persons,\n        newName: '',\n        newNumber: ''\n      })\n    }\n\n  }\n  handleNoteChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newName: event.target.value })\n  }\n  handleNumberChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newNumber: event.target.value })\n  }\n\n  render() {\n    console.log('render')\n    //this.componentDidMount()\n    \n    return (\n      <div>\n      <h2>Puhelinluettelo</h2>\n      <Form submit={this.addPerson} addNote = {this.addNote} newNote = {this.state.newNote}\n      onChangeNote={this.handleNoteChange} newNumber = {this.state.newNumber}\n      onChangeNumber={this.handleNumberChange}></Form>\n      <h2>Numerot</h2>\n     <ul>\n     <ViewDirectory persons = {this.state.persons}></ViewDirectory>\n     </ul>\n    </div>\n    )\n  }\n}\n\nconst ViewDirectory = (props) => {\n  return(\n    <div>\n      {props.persons.map(p => <li key={p.name}>{p.name} {p.numero}</li>)}\n    </div>\n  )\n}\n\nconst Form = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addNote}>\n        <div>\n          nimi: <input value={props.newNote}\n            onChange={props.onChangeNote}\n          />\n          numero: <input value={props.newNumber}\n            onChange={props.onChangeNumber}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}